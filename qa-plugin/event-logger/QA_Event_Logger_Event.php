<?php
/*
	Question2Answer by Gideon Greenspan and contributors
	http://www.question2answer.org/

	File: qa-plugin/event-logger/qa-event-logger.php
	Description: Event module class for event logger plugin


	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 2
	of the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	More about this license: http://www.question2answer.org/license.php
*/

class QA_Event_Logger_Event extends Q2A_Plugin_Module_Event
{
	public function getInternalId()
	{
		return 'Q2A_Event_Logger';
	}

	public function processEvent($event, $userid, $handle, $cookieid, $params)
	{
		if (qa_opt('event_logger_to_database')) {
			$paramstring='';

			foreach ($params as $key => $value)
				$paramstring.=(strlen($paramstring) ? "\t" : '').$key.'='.$this->value_to_text($value);

			qa_db_query_sub(
				'INSERT INTO ^eventlog (datetime, ipaddress, userid, handle, cookieid, event, params) '.
				'VALUES (NOW(), $, $, $, #, $, $)',
				qa_remote_ip_address(), $userid, $handle, $cookieid, $event, $paramstring
			);
		}

		if (qa_opt('event_logger_to_files')) {

		//	Substitute some placeholders if certain information is missing

			if (!strlen($userid))
				$userid='no_userid';

			if (!strlen($handle))
				$handle='no_handle';

			if (!strlen($cookieid))
				$cookieid='no_cookieid';

			$ip=qa_remote_ip_address();
			if (!strlen($ip))
				$ip='no_ipaddress';

		//	Build the log file line to be written

			$fixedfields=array(
				'Date' => date('Y\-m\-d'),
				'Time' => date('H\:i\:s'),
				'IPaddress' => $ip,
				'UserID' => $userid,
				'Username' => $handle,
				'CookieID' => $cookieid,
				'Event' => $event,
			);

			$fields=$fixedfields;

			foreach ($params as $key => $value)
				$fields['param_'.$key]=$key.'='.$this->value_to_text($value);

			$string=implode("\t", $fields);

		//	Build the full path and file name

			$directory=qa_opt('event_logger_directory');

			if (substr($directory, -1)!='/')
				$directory.='/';

			$filename=$directory.'q2a-log-'.date('Y\-m\-d').'.txt';

		//	Open, lock, write, unlock, close (to prevent interference between multiple writes)

			$exists=file_exists($filename);

			$file=@fopen($filename, 'a');

			if (is_resource($file)) {
				if (flock($file, LOCK_EX)) {
					if ( (!$exists) && (filesize($filename)===0) && !qa_opt('event_logger_hide_header') )
						$string="Question2Answer ".QA_VERSION." log file generated by Event Logger plugin.\n".
							"This file is formatted as tab-delimited text with UTF-8 encoding.\n\n".
							implode("\t", array_keys($fixedfields))."\textras...\n\n".$string;

					fwrite($file, $string."\n");
					flock($file, LOCK_UN);
				}

				fclose($file);
			}
		}
	}

	public function value_to_text($value)
	{
		if (is_array($value))
			$text='array('.count($value).')';
		elseif (strlen($value)>40)
			$text=substr($value, 0, 38).'...';
		else
			$text=$value;

		return strtr($text, "\t\n\r", '   ');
	}
}
